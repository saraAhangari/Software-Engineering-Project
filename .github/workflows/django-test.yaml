name: Run Django Tests

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_HOST }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    strategy:
      matrix:
        python-version: ["3.10"] 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Load .env
        run: |
          echo "${{ secrets.SECRET_KEY }}" > ./.env  
          echo "${{ secrets.PANEL_API_KEY }}" > ./.env  
          echo "${{ secrets.DEBUG_MODE }}" > ./.env  
          echo "${{ secrets.DB_NAME }}" > ./.env  
          echo "${{ secrets.POSTGRES_USER }}" > ./.env  
          echo "${{ secrets.POSTGRES_PASSWORD }}" > ./.env  
          echo "${{ secrets.DB_HOST }}" > ./.env  
          echo "${{ secrets.DB_PORT }}" > ./.env  
          echo "${{ secrets.REDIS_URI }}" > ./.env      
      - name: Run Tests      
        run: |
          pip install -U python-dotenv
          python -m dotenv .env python manage.py test

