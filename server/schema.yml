openapi: 3.0.3
info:
  title: SBU Hospital API
  version: 1.0.0
  description: crud rest api
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assurance:
    get:
      operationId: api_v1_assurance_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_assurance_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_assurance_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/comment/{doctor_id}/:
    post:
      operationId: api_v1_comment_create
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/v1/comment/{doctor_id}/permission:
    get:
      operationId: api_v1_comment_permission_retrieve
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_comment_permission_create
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/comments:
    get:
      operationId: api_v1_comments_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: api_v1_comments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/v1/doctors:
    get:
      operationId: api_v1_doctors_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorListList'
          description: ''
  /api/v1/doctors/{doctor_id}/:
    get:
      operationId: api_v1_doctors_retrieve
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: ''
  /api/v1/get_token:
    post:
      operationId: api_v1_get_token_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/login:
    post:
      operationId: api_v1_login_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/logout:
    post:
      operationId: api_v1_logout_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/patient/medical_history:
    post:
      operationId: api_v1_patient_medical_history_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalHistory'
          description: ''
  /api/v1/patient/profile:
    get:
      operationId: api_v1_patient_profile_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    put:
      operationId: api_v1_patient_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    patch:
      operationId: api_v1_patient_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
  /api/v1/register:
    post:
      operationId: api_v1_register_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/role:
    get:
      operationId: api_v1_role_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    post:
      operationId: api_v1_role_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/v1/role/{id}/:
    get:
      operationId: api_v1_role_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: api_v1_role_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/validate:
    post:
      operationId: api_v1_validate_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    BloodGroupEnum:
      enum:
      - A+
      - A-
      - B-
      - B+
      - O+
      - O-
      - AB-
      - AB+
      type: string
      description: |-
        * `A+` - A Positive
        * `A-` - A Negative
        * `B-` - B Negative
        * `B+` - B Positive
        * `O+` - O Positive
        * `O-` - O Negative
        * `AB-` - AB Negative
        * `AB+` - AB Positive
    Comment:
      type: object
      properties:
        doctor_id:
          type: integer
        patient_id:
          type: integer
        treatment_experience:
          type: string
          nullable: true
        point:
          type: integer
          maximum: 5
          minimum: 1
      required:
      - doctor_id
      - patient_id
    Doctor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 10
        description:
          type: string
          nullable: true
        fees:
          type: number
          format: double
        medical_system_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        speciality:
          type: string
          readOnly: true
        phone_no:
          type: string
          maxLength: 11
        birthdate:
          type: string
          format: date
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        comments:
          type: array
          items:
            type: integer
      required:
      - comments
      - fees
      - id
      - medical_system_number
      - national_id
      - phone_no
      - speciality
    DoctorList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 10
        description:
          type: string
          nullable: true
        fees:
          type: number
          format: double
        medical_system_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        speciality:
          type: array
          items:
            $ref: '#/components/schemas/Speciality'
        phone_no:
          type: string
          maxLength: 11
        birthdate:
          type: string
          format: date
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
      required:
      - fees
      - id
      - medical_system_number
      - national_id
      - phone_no
      - speciality
    GenderEnum:
      enum:
      - m
      - f
      type: string
      description: |-
        * `m` - male
        * `f` - female
    MedicalHistory:
      type: object
      properties:
        height:
          type: number
          format: double
        weight:
          type: number
          format: double
        blood_group:
          $ref: '#/components/schemas/BloodGroupEnum'
        blood_pressure:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - blood_group
      - blood_pressure
      - height
      - weight
    PaginatedDoctorListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DoctorList'
    PatchedPatient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 10
        phone_no:
          type: string
          maxLength: 11
        birthdate:
          type: string
          format: date
          nullable: true
        assurance:
          type: integer
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        medical_history:
          $ref: '#/components/schemas/MedicalHistory'
    Patient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 10
        phone_no:
          type: string
          maxLength: 11
        birthdate:
          type: string
          format: date
          nullable: true
        assurance:
          type: integer
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        medical_history:
          $ref: '#/components/schemas/MedicalHistory'
      required:
      - id
      - medical_history
      - national_id
      - phone_no
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 10
      required:
      - id
      - name
    Speciality:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
      required:
      - id
      - name
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
