version: "3.9"


services:
  redis:
    image: redis
    container_name: 'redis'
    volumes:
      - redis:/var/lib/redis/data
    ports:
      - "6379:6379"

  db:
    image: postgres
    container_name: 'db'
    env_file:
      - .env.base
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    volumes:
      - postgres:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "5432:5432"


  worker:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    container_name: 'worker'

    command: 'celery -A hospitalAppointment worker --loglevel=info'
    depends_on:
      - redis
      - db

    env_file:
      - .env.base

    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG_MODE=${DEBUG_MODE}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - REDIS_URI=${REDIS_URI}
      - PANEL_API_KEY=${PANEL_API_KEY}

    volumes:
      - .:/app

    restart: on-failure



  server:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    container_name: 'server'
    command: >
      sh -c "python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"

    env_file:
      - .env.base

    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG_MODE=${DEBUG_MODE}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - REDIS_URI=${REDIS_URI}
      - PANEL_API_KEY=${PANEL_API_KEY}

    volumes:
      - .:/app
      - static:/usr/src/app/static
      - media:/usr/src/app/media

    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

    restart: always

volumes:
  redis:
  postgres:
  static:
  media:



